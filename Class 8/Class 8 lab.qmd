---
title: "Class 8"
author: Lauren Waters (A16326738)
format: pdf
---

## Outline 
Today we will apply the machine learning methods we introduced in the last class on breast cancer biopsy data from fine needle aspiration (FNA).

## Data input 
The dta is supplied in CVS format:

```{r}
wisc.df <- read.csv("WisconsinCancer.csv", row.names=1)
head(wisc.df)
```

## 1. Exploratory data analysis 

We don't want to ID numbers included in the dataset (we won't really be needing it), so we set the ID number as the row titles. 

```{r}
diagnosis <- as.factor(wisc.df$diagnosis)
wisc.data <- wisc.df[,-1]
```

>Q1. How many people are in this data set 

```{r}
nrow(wisc.data)
```

>Q2. How many of the observations have a malignant diagnosis? 

```{r}
table(wisc.df$diagnosis)
```

can also use `sum()` 

```{r}
sum(wisc.df$diagnosis == "M")
```

>Q3. How many variables/features in the data are suffixed with _mean?

```{r}
x <- colnames(wisc.df)
length(grep("_mean", x))
```

## 2. Principal Component Anaysis 

We need to scale our input data before PCS as some of the columns are measured in terms of very different unit wuth different means and different vairances. We will set `scale=TRUE` argument to `prcomp`.

```{r}
wisc.pr <- prcomp(wisc.data, scale = TRUE)
summary(wisc.pr)
```

```{r}
plot(wisc.pr$x[,1], wisc.pr$x[,2], col=diagnosis)
```

>Q4. From your results, what proportion of the original variance is captured by the first principal components (PC1)?

0.4427

>Q5. How many principal components (PCs) are required to describe at least 70% of the original variance in the data?

PC3

>Q6. How many principal components (PCs) are required to describe at least 90% of the original variance in the data?

PC7

```{r}
biplot(wisc.pr)
```

>Q7. What stands out to you about this plot? Is it easy or difficult to understand? Why? 

It's very difficult to read 

```{r}
plot(wisc.pr$x, col=diagnosis, xlab = "PC1", ylab = "PC2")
```

>Q8. Generate a similar plot for principal components 1 and 3. What do you notice about these plots?

```{r}
plot(wisc.pr$x, col = diagnosis, xlab = "PC1", ylab = "PC3")
```

```{r}
pr.var <-  wisc.pr$sdev^2
head(pr.var)
```

```{r}
pve <-  pr.var / sum(pr.var)
plot(pve, xlab = "Principal Component", ylab = "Proportion of Variance Explained", ylim = c(0, 1), type = "o")
```

>Q9. For the first principal component, what is the component of the loading vector (i.e. wisc.pr$rotation[,1]) for the feature concave.points_mean?

```{r}
wisc.pr$rotation[,1]
```
 
 -0.26085376 

>Q10. What is the minimum number of principal components required to explain 80% of the variance of the data?

PC5

## 3. Heirarchical clustering

```{r}
data.scaled <- scale(wisc.data)
data.dist <- dist(data.scaled)
wisc.hclust <-  hclust(data.dist)
```

>Q11. Using the plot() and abline() functions, what is the height at which the clustering model has 4 clusters?

```{r}
plot(wisc.hclust)
abline(h=4, col ="red", lty = 2)
```

```{r}
wisc.hclust.cluster <- cutree(wisc.hclust, k = 4)
table(wisc.hclust.cluster, diagnosis)
```

>Q12. Can you find a better cluster vs diagnoses match by cutting into a different number of clusters between 2 and 10?

```{r}
wisc.hclust.cluster <- cutree(wisc.hclust, k = 2)
table(wisc.hclust.cluster, diagnosis)
```

>Q13. Which method gives your favorite results for the same data.dist dataset? Explain your reasoning.

No preference because the output is the same for all of them.

```{r}
hclust(data.dist, method = "ward.D2")
```

```{r}
hclust(data.dist, method = "single")
```

```{r}
hclust(data.dist, method = "complete")
```

```{r}
hclust(data.dist, method = "average")
```

## 5. Combining methods 

This approach will not take the original data but our PCA resilts and work with them. 

```{r}
d <- dist(wisc.pr$x[,1:3])
wisc.pr.hclust <- hclust(d, method = "ward.D2")
plot(wisc.pr.hclust)
```

Generate 2 cluster gorups from this hclust object 

```{r}
grps <- cutree(wisc.pr.hclust, k = 2)
grps
```

```{r}
plot(wisc.pr$x[,1], wisc.pr$x[,2], col = grps)
```

```{r}
table(grps)
```

```{r}
table(diagnosis)
```

```{r}
table(diagnosis, grps)
```

```{r}
plot(wisc.pr$x[,1:2], col = diagnosis)
```

```{r}
g <- as.factor(grps)
levels(g)
```

```{r}
g <- relevel(g,2)
levels(g)
```

```{r}
plot(wisc.pr$x[,1:2], col=g)
```

>Q15. How well does the newly created model with four clusters separate out the two diagnoses?

```{r}
table(grps, diagnosis)
```

There is an obvious separation between the groups and diagnosis.
